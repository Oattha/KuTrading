// C:\marketplace3\server\src\socket.js
import { Server } from "socket.io"

let io

export function initSocket(server) {
io = new Server(server, {
  cors: {
    origin: "http://localhost:5173",  // ‚úÖ ‡πÉ‡∏™‡πà origin ‡∏Ç‡∏≠‡∏á frontend ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
    methods: ["GET", "POST"],
    credentials: true                 // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏î‡πâ‡∏ß‡∏¢
  },
})

  io.on("connection", (socket) => {
    console.log("‚úÖ User connected:", socket.id)

    // join ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó (‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö object ‡∏à‡∏≤‡∏Å client)
    socket.on("joinRoom", ({ conversationId }) => {
      socket.join(`conv_${conversationId}`)
      console.log(`‚û°Ô∏è ${socket.id} joined room conv_${conversationId}`)
    })

    // broadcast ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
    socket.on("message:new", (msg) => {
      console.log("üì© message:new", msg)
      io.to(`conv_${msg.conversationId}`).emit("message:new", msg)
    })

    // broadcast ‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
    socket.on("message:read", ({ conversationId, userId, lastReadMessageId }) => {
      console.log("üëÅÔ∏è message:read", { conversationId, userId, lastReadMessageId })
      io.to(`conv_${conversationId}`).emit("message:read", {
        userId,
        lastReadMessageId,
      })
    })

    socket.on("disconnect", () => {
      console.log("‚ùå disconnected:", socket.id)
    })
  })

  return io
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö emit event ‡∏à‡∏≤‡∏Å controller ‡∏õ‡∏Å‡∏ï‡∏¥
export function getIO() {
  if (!io) throw new Error("Socket.io not initialized!")
  return io
}



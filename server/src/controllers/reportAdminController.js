import prisma from "../config/prisma.js";
import SibApiV3Sdk from "sib-api-v3-sdk";

// ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Brevo API client
const brevoClient = SibApiV3Sdk.ApiClient.instance;
const apiKey = brevoClient.authentications["api-key"];
apiKey.apiKey = process.env.BREVO_API_KEY;

const emailApi = new SibApiV3Sdk.TransactionalEmailsApi();

// ‚úÖ Sender ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å env ‡∏´‡∏£‡∏∑‡∏≠ fallback
const DEFAULT_SENDER = {
  email: process.env.SENDER_EMAIL || "facup877@gmail.com",
  name: "KU Trading Admin Team",
};

// ==========================
// üì¨ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡∏û‡∏≠‡∏£‡πå‡∏ï
// ==========================
export const notifyReportedUser = async (req, res) => {
  try {
    const { id } = req.params; // id ‡∏Ç‡∏≠‡∏á report
    const { message } = req.body;

    // ‡∏´‡∏≤‡∏£‡∏µ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô
    const report = await prisma.report.findUnique({
      where: { id: Number(id) },
      include: {
        targetUser: true,
        reporter: true,
      },
    });

    if (!report || !report.targetUser) {
      return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡∏û‡∏≠‡∏£‡πå‡∏ï" });
    }

    console.log(`üìß Sending report email to: ${report.targetUser.email}`);

    // ‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏î‡πâ‡∏ß‡∏¢ Brevo API
    await emailApi.sendTransacEmail({
      sender: DEFAULT_SENDER,
      to: [{ email: report.targetUser.email }],
      subject: `üö® ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏° KU Trading`,
      htmlContent: `
        <h3>‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏∏‡∏ì ${report.targetUser.name || "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"}</h3>
        <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
        <p><b>‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:</b> ${report.reason}</p>
        <p><b>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•:</b></p>
        <blockquote style="background:#f3f4f6;padding:10px;border-left:3px solid #007BFF">
          ${message}
        </blockquote>
        <hr/>
        <p style="font-size:12px;color:#888;">KU Trading Marketplace System</p>
      `,
    });

    console.log("‚úÖ Report email sent successfully");

    // ‚úÖ Log ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
    await prisma.adminActionLog.create({
      data: {
        adminId: req.user.id,
        action: "notify_reported_user",
        targetUserId: report.targetUser.id,
        details: { reportId: report.id, message },
      },
    });

    return res.json({ message: "‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß" });
  } catch (e) {
    console.error("‚ùå notifyReportedUser error:", e);
    return res.status(500).json({
      message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô",
      error: e.message,
    });
  }
};
